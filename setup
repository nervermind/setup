#!/usr/bin/env bash

set -o errexit

REPO_URL=https://github.com/nervermind/setup.git
DEFAULT_REPO_PATH="$HOME/.dotfiles"

reset_color=$(tput sgr 0)

info() {
	printf "%s[*] %s%s\n" "$(tput setaf 4)" "$1" "$reset_color"
}

success() {
	printf "%s[*] %s%s\n" "$(tput setaf 2)" "$1" "$reset_color"
}

err() {
	printf "%s[*] %s%s\n" "$(tput setaf 1)" "$1" "$reset_color"
}

warn() {
	printf "%s[*] %s%s\n" "$(tput setaf 3)" "$1" "$reset_color"
}

check_system_info() {
    # Check OS and OS version
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        OS="Linux"
        OS_VERSION=$(cat /etc/os-release | grep VERSION= | cut -d '"' -f 2)
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        OS="macOS"
        OS_VERSION=$(sw_vers -productVersion)
    elif [[ "$OSTYPE" == "win32" ]]; then
        OS="Windows"
        OS_VERSION="N/A"
    else
        OS="Unknown"
        OS_VERSION="N/A"
    fi

    # Check terminal
    if [[ "$SHELL" == *"bash"* ]]; then
        TERMINAL="bash"
    elif [[ "$SHELL" == *"zsh"* ]]; then
        TERMINAL="zsh"
    elif [[ "$SHELL" == *"powershell"* ]]; then
        TERMINAL="powershell"
    else
        TERMINAL="unknown"
    fi

    echo "Operating System: $OS"
    echo "OS Version: $OS_VERSION"
    echo "Terminal: $TERMINAL"

	# If OS is not macOS, exit script
	if [[ "$OS" != "macOS" ]]; then
		err "This script is only for macOS. Exiting..."
		exit 1
	fi
}

install_xcode() {
	if xcode-select -p >/dev/null; then
		warn "xCode Command Line Tools already installed"
	else
		info "Installing xCode Command Line Tools..."
		xcode-select --install
		sudo xcodebuild -license accept
	fi
}

install_homebrew() {
	export HOMEBREW_CASK_OPTS="--appdir=/Applications"
	if hash brew &>/dev/null; then
		warn "Homebrew already installed"
	else
		info "Installing homebrew..."
		sudo --validate # reset `sudo` timeout to use Homebrew install in noninteractive mode
		NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
	fi
}

install_git() {
	if which git >/dev/null 2>&1 || hash git &>/dev/null; then
		warn "Git already installed."
	else
		info "Installing Git..."
		brew install git
	fi
}

info "####### setup new machine #######"
read -p "Press enter to start:"
info "Bootstraping..."


check_system_info
install_xcode
install_homebrew
install_git

info "Cloning setup repo from $REPO_URL"
read -p "Change install path or enter (default is '$DEFAULT_REPO_PATH'): " user_input
REPO_PATH=${user_input:-$DEFAULT_REPO_PATH} # Use the default value if no input is provided
echo "You selected: $REPO_PATH"
git clone "$REPO_URL" "$REPO_PATH"

info "Change path to $REPO_PATH"
cd "$REPO_PATH" >/dev/null

# Make the install.sh script executable
chmod +x ./scripts/install.sh

# Execute the install.sh script
/bin/bash -c "./scripts/install.sh"